from aiogram import Router, types
from aiogram.filters import CommandStart
from aiogram import Dispatcher  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç Dispatcher
import logging  # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç logging
from keyboard.kbmain import main_kb

def setup_handlers(dp: Dispatcher):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    router = Router()
   #–∫–æ–º–∞–Ω–¥–∞ /start 
    @router.message(CommandStart())
    async def cmd_start(message: types.Message):
        try:
            await message.answer(
                "üè• –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º!\n"
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
                reply_markup=main_kb
            )
            logging.info(f"User {message.from_user.id} started the bot")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        except Exception as e:
            logging.error(f"Error in cmd_start: {e}")
            await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞")
    
    dp.include_router(router)